# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
jobs:
  checkout_code:
    machine:
      # specify the version you desire here
      image: circleci/classic:edge
    working_directory: ~/t-farm
    steps:
      - checkout
      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/t-farm
  test:
    machine:
      image: circleci/classic:edge
    working_directory: ~/t-farm

    steps:
      - checkout
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: docker-compose up
          command: |
            set -x
            docker-compose up --build -d
      - run:
          name: docker-compose stop
          command: |
            set -x
            docker-compose stop
      - run:
          name: docker-compose up
          command: |
            set -x
            docker-compose up -d

      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 3m
      - run:
          name: Prepare db
          command: |
            docker-compose exec web rails db:create db:migrate --trace

      # run tests!
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            docker-compose exec web rspec \
              --format progress \
              --out /tmp/test-results/rspec.xml \
              --format documentation \
              $TEST_FILES

      - run:
          name: docker-compose down
          command: docker-compose down

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2.1
  test:
    jobs:
      - checkout_code
      - test:
          requires:
            - checkout_code